package com.loiane.estruturadados.vetor;

import java.util.Arrays;

public class Vetor {
	
	private String[] elementos; 
	private int tamanho;
	
	public Vetor(int capacidade) {
		this.elementos = new String[capacidade];
		this.tamanho = 0;
	}
	
	//adicionamento valores no vetor
	
	/*public void adiciona(String elemento) {
		for (int i = 0; i<elementos.length; i++) {
			if (this.elementos[i] == null) {
				this.elementos[i] = elemento;
				break;
			}
		}
	}

	//identificando qual a última posição utilizada no vetor
	
	public void adiciona(String elemento) throws Exception {
		
		if (this.tamanho < this.elementos.length) {
			this.elementos[this.tamanho] = elemento;
			this.tamanho++;
		} else {
			throw new Exception ("Não é possível adicionar mais elementos");
		}
		
	}*/
	
	public boolean adiciona(String elemento){
		
		if (this.tamanho < this.elementos.length) {
			this.elementos[this.tamanho] = elemento;
			this.tamanho++;
			return true;
		} 
		return false;

	}
	//metodo de busca
	
	public String busca(int posicao) {
		if (! (posicao >=0 && posicao < tamanho)) {
			throw new IllegalArgumentException("A posição é  inválida");
		}
		return this.elementos[posicao];
				
	}
	
	
	//verificando o tamanho do vetor
	
	public int tamanho () {
		return this.tamanho;
	}
		
	@Override
	public String toString () {
		
		StringBuilder s = new StringBuilder();
		s.append("[");
		
		// concatenação dos elementos
		for (int i=0; i<this.tamanho; i++) {
			s.append( this.elementos[i]);
			s.append(" , ");
		}
		// acessando a última posição
		if (this.tamanho<0) {
			s.append(this.elementos[this.tamanho-1]);
		}
		s.append(" ] ");
		
		return s.toString();
	}
}
